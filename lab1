index.html

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pokemon</title>
    <link rel="stylesheet" href="styles.css"> 
</head>
<body>   
        <header>
            <h1>Pokemon Go</h1>
            <input type="text" id="search" placeholder="Wyszukaj Pokemona..." />
        </header>
    <div class="container">

        
        <div id="pokemon-list" class="pokemon-list">
        </div>
        
        <div id="pokemon-details" class="pokemon-details">
        </div>
        
        <div id="loading" class="loading">
            <p>≈Åadowanie...</p>
        </div>
    </div>

    <script src="app.js"></script> 
</html>

app.js

const pokemon_list=document.getElementById('pokemon-list')
const pokemon_details=document.getElementById('pokemon-details')
const search=document.getElementById('search')
const loading=document.getElementById('loading')

const API_URL = 'https://pokeapi.co/api/v2/pokemon'

async function fetchListPokemons(){
    loading.style.display='block'
    const response=await fetch(API_URL+'?limit=20')
    if (!response.ok){
        loading.style.display='none'
        console.error("Brak podczas pobierania")
        return
    }
    data=await response.json()
    loading.style.display='none'
    showList(data.results)
}

function showList(pokemons){
    pokemon_list.innerHTML=''
    const elements=pokemons.map((pokemon) =>{
        const pokemonId=pokemon.url.split('/').filter(Boolean).pop()
        return fetch(`${API_URL}/${pokemonId}`)
        .then(response=> response.json())
        .then(pokemonData =>{
            return {
                pokemonId,
                name: pokemon.name,
                image:pokemonData.sprites.front_default
            }
        })
        .catch(error =>{
            console.error("Blad przy pobieraniu szczegolow")
        })
    })

    Promise.all(elements).then(elements =>{
        elements.map(elem =>{
            const pokemonCard=document.createElement('div')
            pokemonCard.classList.add('pokemon-card')

            const pokemonImage=document.createElement('img')
            pokemonImage.src=elem.image
            pokemonImage.alt=elem.name

            const pokemonName=document.createElement('h3')
            pokemonName.textContent=elem.name 

            const pokemonId=document.createElement('p')
            pokemonId.textContent=elem.pokemonId

            pokemonCard.addEventListener('click', () =>{
                fetchPokemonDetails(elem.pokemonId)
            })

            pokemonCard.appendChild(pokemonImage)
            pokemonCard.appendChild(pokemonName)
            pokemonCard.appendChild(pokemonId)
            pokemon_list.appendChild(pokemonCard)
        })
    })
}

async function fetchPokemonDetails(id){
    loading.style.display='block'
    const response = await fetch(`${API_URL}/${id}`)

    if (response.ok){
        const pokemon=await response.json()
        loading.style.display = 'none'
        showDetails(pokemon)
    }else{
        loading.style.display='none'
        console.error('Blad pobierania szczegolow')
    }
}

function showDetails(pokemon){
    pokemon_details.style.display='block'
    pokemon_details.innerHTML=''

    const pokemonName=document.createElement('h3')
    pokemonName.textContent=pokemon.name

    const pokemonImage=document.createElement('img')
    pokemonImage.src=`${pokemon.sprites.front_default}`
    pokemonImage.alt=pokemon.name

    const pokemonTypes=document.createElement('h2')
    pokemonTypes.textContent='Typy:'
    const typesList=document.createElement('ul')
    pokemon.types.map(type => {
        const typeItem=document.createElement('li')
        typeItem.textContent=type.type.name
        typesList.appendChild(typeItem)
    })

    const pokemonStats=document.createElement('h2')
    pokemonStats.textContent='Statystyki:'
    const statsList=document.createElement('ul')
    pokemon.stats.map(stat =>{
        const statItem=document.createElement('li')
        statItem.textContent=`${stat.stat.name}: ${stat.base_stat}`
        statsList.appendChild(statItem)
    })

    const pokemonHeight = document.createElement('h2');
    pokemonHeight.textContent = `Wzrost: ${pokemon.height}`;

    const pokemonWeight=document.createElement('h2')
    pokemonWeight.textContent=`Waga: ${pokemon.weight}`

    const closeButton=document.createElement('div')
    closeButton.classList.add('close-button')
    closeButton.textContent='X'
    closeButton.addEventListener('click', ()=>{
        pokemon_details.innerHTML=''
        pokemon_details.style.display='none'
    })

    pokemon_details.appendChild(closeButton)
    pokemon_details.appendChild(pokemonName)
    pokemon_details.appendChild(pokemonImage)
    pokemon_details.appendChild(pokemonTypes)
    pokemon_details.appendChild(typesList)
    pokemon_details.appendChild(pokemonStats)
    pokemon_details.appendChild(statsList)
    pokemon_details.appendChild(pokemonHeight)
    pokemon_details.appendChild(pokemonWeight)
}

search.addEventListener('input', function() {
    const searchTerm = search.value.toLowerCase();
    const allCards = [...document.querySelectorAll('.pokemon-card')];
    allCards.map(card => {
        const pokemonName = card.querySelector('h3').textContent.toLowerCase();
        card.style.display = pokemonName.includes(searchTerm) ? '' : 'none';
    });
});

fetchListPokemons()

styles.css

body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f9;
    margin: 0;
    padding: 0;
    height:auto;
    width:auto;
}

.container {
    width: 80%;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    margin-bottom: 500px;
    height: auto;
}

header {
    text-align: center;
    margin: 20px 0;
}
img{
    height: 140px;
    width: 300px;
}

input {
    padding: 10px;
    width: 100%;
    max-width: 400px;
    margin-top: 10px;
    font-size: 16px;
}

.pokemon-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    margin-top: 20px;
    width: 100%;
    height: 217px;

}

.pokemon-card {
    width: 150px;
    text-align: center;
    background-color: white;
    margin: 10px;
    padding: 10px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    cursor: pointer;
    height: auto;
}

.pokemon-card:hover {
    transform: scale(1.05);
}

.pokemon-card img {
    width: 120px;
    height: 120px;
}
.pokemon-card h2{
    font-size:  25px;;
}
.pokemon-card p{
    font-size: 17px;
    font-style: italic;
}

.pokemon-details {
    display: none;
    background-color: white;
    padding: 20px;
    margin: auto;
    margin-top: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 500px;

}
.pokemon-details h2{
    text-align: center;
    font-size: 25px;
}
.pokemon-details h3{
    text-align: center;
    text-transform:capitalize;
    font-size: 30px;
}
.pokemon-details li{
    font-size: 20px;
}
.pokemon-details img{
    height: 150px;
    width: 150px;
}

.loading {
    text-align: center;
    display: none;
    font-weight: bold;
}

.close-button {
    text-align: right;
    cursor: pointer;
} 
