<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pokemon</title>
    <link rel="stylesheet" href="styles.css"> 
</head>
<body>   
    <script
        src="https://unpkg.com/react@18/umd/react.development.js">
    </script>
    <script
        src="https://unpkg.com/react-dom@18/umd/react-dom.development.js">
    </script>

    <script
        src="https://unpkg.com/@babel/standalone/babel.min.js">
    </script>

    <script type="text/babel">
      const pokemon_list = React.getElementById("pokemon-list");
      const pokemon_details = React.getElementById("pokemon-details");
      const search = React.getElementById("search");
      const loading = React.getElementById("loading");

const API_URL = "https://pokeapi.co/api/v2/pokemon";

async function fetchListPokemons() {
  loading.style.display = "block";
  const response = await fetch(API_URL + "?limit=20");
  if (!response.ok) {
    loading.style.display = "none";
    console.error("Brak podczas pobierania");
    return;
  }
  data = await response.json();
  loading.style.display = "none";
  showList(data.results);
}

function showList(pokemons) {
  pokemon_list.innerHTML = "";
  const elements = pokemons.map((pokemon) => {
    const pokemonId = pokemon.url.split("/").pop();
    return fetch(`${API_URL}/${pokemonId}`)
      .then((response) => response.json())
      .then((pokemonData) => {
        return {
          pokemonId,
          name: pokemon.name,
          image: pokemonData.sprites.front_default,
        };
      })
      .catch((error) => {
        console.error("Blad przy pobieraniu szczegolow");
      });
  });

  Promise.all(elements)
    .then((elements) => {
      elements.map((elem) => {
        const pokemonCard = React.createElement("div");
        pokemonCard.classList.add("pokemon-card");

        const pokemonImage = React.createElement("img");
        pokemonImage.src = elem.image;
        pokemonImage.alt = elem.name;

        const pokemonName = React.createElement("h3");
        pokemonName.textContent = elem.name;

        const pokemonId = React.createElement("p");
        pokemonId.textContent = elem.pokemonId;

        pokemonCard.addEventListener("click", () => {
          fetchPokemonDetails(elem.pokemonId);
        });

        pokemonCard.appendChild(pokemonImage);
        pokemonCard.appendChild(pokemonName);
        pokemonCard.appendChild(pokemonId);
        pokemon_list.appendChild(pokemonCard);
      });
    })
    .catch((error) => console.error("Blad przy pobieraniu danych"));
}

async function fetchPokemonDetails(id) {
  loading.style.display = "block";
  const response = await fetch(`${API_URL}/${id}`);

  if (response.ok) {
    const pokemon = await response.json();
    loading.style.display = "none";
    showDetails(pokemon);
  } else {
    loading.style.display = "none";
    console.error("Blad pobierania szczegolow");
  }
}

function showDetails(pokemon) {
  pokemon_details.style.display = "block";
  pokemon_details.innerHTML = "";

  const pokemonName = React.createElement("h3");
  pokemonName.textContent = pokemon.name;

  const pokemonImage = React.createElement("img");
  pokemonImage.src = `${pokemon.sprites.front_default}`;
  pokemonImage.alt = pokemon.name;

  const pokemonTypes = React.createElement("h2");
  pokemonTypes.textContent = "Typy:";
  const typesList = React.createElement("ul");
  pokemon.types.map((type) => {
    const typeItem = React.createElement("li");
    typeItem.textContent = type.type.name;
    typesList.appendChild(typeItem);
  });

  const pokemonStats = React.createElement("h2");
  pokemonStats.textContent = "Statystyki:";
  const statsList = Raect.createElement("ul");
  pokemon.stats.map((stat) => {
    const statItem = Raect.createElement("li");
    statItem.textContent = `${stat.stat.name}: ${stat.base_stat}`;
    statsList.appendChild(statItem);
  });

  const pokemonHeight = React.createElement("h2");
  pokemonHeight.textContent = `Wzrost: ${pokemon.height}`;

  const pokemonWeight = React.createElement("h2");
  pokemonWeight.textContent = `Waga: ${pokemon.weight}`;

  const closeButton = React.createElement("div");
  closeButton.classList.add("close-button");
  closeButton.textContent = "X";
  closeButton.addEventListener("click", () => {
    pokemon_details.innerHTML = "";
    pokemon_details.style.display = "none";
  });

  pokemon_details.appendChild(closeButton);
  pokemon_details.appendChild(pokemonName);
  pokemon_details.appendChild(pokemonImage);
  pokemon_details.appendChild(pokemonTypes);
  pokemon_details.appendChild(typesList);
  pokemon_details.appendChild(pokemonStats);
  pokemon_details.appendChild(statsList);
  pokemon_details.appendChild(pokemonHeight);
  pokemon_details.appendChild(pokemonWeight);
}

search.addEventListener("input", function () {
  const searchTerm = search.value.toLowerCase();
  const allCards = [...React.querySelectorAll(".pokemon-card")];
  allCards.map((card) => {
    const pokemonName = card.querySelector("h3").textContent.toLowerCase();
    card.style.display = pokemonName.includes(searchTerm) ? "" : "none";
  });
});

fetchListPokemons();

    </script>
        <header>
            <h1>Pokemon Go</h1>
            <input type="text" id="search" placeholder="Wyszukaj Pokemona..." />
        </header>
    <div class="container">

        
        <div id="pokemon-list" class="pokemon-list">
        </div>
        
        <div id="pokemon-details" class="pokemon-details">
        </div>
        
        <div id="loading" class="loading">
            <p>≈Åadowanie...</p>
        </div>
    </div>

    <script src="app.js"></script> 
</html>
